
effect
{
    Name: "Damage",
    Params:
    {
        Amount: Number
    },
    Action: (targets, context) => {
    for target in targets
    {
       target.Power -= Amount;
    };
   }
}
effect
{
    Name: "Draw",
    Action: (targets, context) => {
        topCard = context.Deck.Pop();
        context.Hand.Add(topCard);
   }
}

effect
{
    Name: "ReturnToDeck",
    Action: (targets, context) => {
    for target in targets
    {
      owner = target.Owner;
      deck = context.DeckOfPlayer(owner);
      deck.Push(target);
      deck.Shuffle();
      context.Board.Remove(target);
    };
   }
}

effect
{
    Name: "TakeOutToHand",
    Action: (targets, context) => {
    for target in targets
    {
      owner = target.Owner;
      field = context.FieldOfPlayer(owner);
      field.Push(target);
      context.HandOfPlayer(owner).Remove(target);
    };
   }
}

      card {
      Type: "Plata",
      Name: "SuperMell",
      Faction: "Gryffindor",
      Power: 7,
      Range: [ "Melee"],
      OnActivation: [
        {
        Effect: {
           Name: "TakeOutToHand",
           },
   Selector: {
             Source: "otherHand",
             Single: false,
             Predicate:
             (unit) => unit.Power == 7
             },}
      ]
      }

card {
      Type: "Plata",
      Name: "SuperJenn",
      Faction: "Slytherin",
      Power: 10,
      Range: [ "Melee"],
      OnActivation: [
 {
   Effect: {
           Name: "Damage",
           Amount: 5,
           },
   Selector: {
             Source: "otherField",
             Single: false,
             Predicate:
             (unit) => unit.Faction == "Gryffindor"
             },
   PostAction: {
        {
   Effect: {
           Name: "Damage",
           Amount: 5,
           },
   Selector: {
             Source: "parent",
             Single: false,
             Predicate:
             (unit) => unit.Name == "Arthur Weasley"
             },
            }
   }
 }
            ]
      }
